trigger:
  - main

variables:
  resourceGroup: 'rg-devops-cli'
  location: 'East US'
  appServicePlan: 'ASP-DevopsRG-87c7'
  webAppName: 'webapp-cli-demo-$(Build.BuildId)'
  runtime: 'NODE:18-lts'

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: DeployAndTest
  displayName: 'Deploy Web App & Run Smoke Tests'
  jobs:
  - job: DeployJob
    displayName: 'Deploy and Verify Web App'
    steps:

    - task: AzureCLI@2
      displayName: '🔧 Ensure Resource Group and Create Web App'
      inputs:
        azureSubscription: 'Con1'
        scriptType: 'bash'
        scriptLocation: 'inlineScript'
        inlineScript: |
          echo "🔍 Checking if resource group '${{ variables.resourceGroup }}' exists..."
          if ! az group show --name "${{ variables.resourceGroup }}" &> /dev/null; then
            echo "📦 Creating resource group..."
            az group create --name "${{ variables.resourceGroup }}" --location "${{ variables.location }}"
          else
            echo "✅ Resource group exists."
          fi

          echo "🔍 Validating runtime '${{ variables.runtime }}'..."
          RUNTIMES=$(az webapp list-runtimes --os-type Linux --query "[].name" -o tsv)
          if echo "$RUNTIMES" | grep -Fxq "${{ variables.runtime }}"; then
            echo "✅ Runtime is supported."
          else
            echo "❌ Runtime '${{ variables.runtime }}' is not supported. Exiting."
            exit 1
          fi

          echo "🚀 Creating Web App: ${{ variables.webAppName }}"
          az webapp create \
            --resource-group "${{ variables.resourceGroup }}" \
            --plan "${{ variables.appServicePlan }}" \
            --name "${{ variables.webAppName }}" \
            --runtime "${{ variables.runtime }}" \
            --deployment-local-git

    - task: NodeTool@0
      inputs:
        versionSpec: '14.x'
      displayName: '📦 Use Node.js 14.x'

    - script: |
        cd src
        npm install
      displayName: '📦 Install Dependencies'

    - task: ArchiveFiles@2
      displayName: '📦 Zip Code for Deployment'
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/src'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/app.zip'
        replaceExistingArchive: true

    - task: AzureWebApp@1
      displayName: '🚀 Deploy to Azure Web App'
      inputs:
        azureSubscription: 'Con1'
        appType: 'webAppLinux'
        appName: '$(webAppName)'
        package: '$(Build.ArtifactStagingDirectory)/app.zip'

    - script: |
        echo "🔍 Smoke Testing Web App: $(webAppName)"
        appUrl="https://$(webAppName).azurewebsites.net"

        echo "🧪 Test 1: Checking HTTP 200..."
        status_code=$(curl -s -o /dev/null -w "%{http_code}" $appUrl)
        if [ "$status_code" -ne 200 ]; then
          echo "❌ Test 1 Failed: Web App is not reachable (Status Code: $status_code)"
          exit 1
        else
          echo "✅ Test 1 Passed"
        fi

        echo "🧪 Test 2: Checking response time..."
        response_time=$(curl -o /dev/null -s -w "%{time_total}\n" $appUrl)
        if (( $(echo "$response_time > 5.0" | bc -l) )); then
          echo "❌ Test 2 Failed: Response took too long ($response_time seconds)"
          exit 1
        else
          echo "✅ Test 2 Passed"
        fi

        echo "🧪 Test 3: Checking if content is correct..."
        content=$(curl -s $appUrl)
        if [[ "$content" == *"Hello from Azure DevOps"* ]]; then
          echo "✅ Test 3 Passed: Content verified"
        else
          echo "❌ Test 3 Failed: Unexpected content"
          exit 1
        fi
      displayName: '✅ Post-Deploy Smoke Tests'
